<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1508394855000</longProp>
        <longProp name="ThreadGroup.end_time">1508394855000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="01-十万个为什么" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">29</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/ask.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">ask</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="十万个为什么" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${ask}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_ask.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="记录语料" enabled="false">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;C:\\zhaopeng\\01-items\\01-AutoTest\\results\\TestResult_Function_os1.6_online.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849361037">:200205,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>false</latency>
                <timestamp>false</timestamp>
                <success>false</success>
                <label>false</label>
                <code>false</code>
                <message>false</message>
                <threadName>false</threadName>
                <dataType>false</dataType>
                <encoding>false</encoding>
                <assertions>false</assertions>
                <subresults>false</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename">C:\zhaopeng\01-items\01-AutoTest\results\TestResult_ask.jmx</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="false">
            <boolProp name="ResultCollector.error_logging">true</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>false</latency>
                <timestamp>false</timestamp>
                <success>false</success>
                <label>false</label>
                <code>false</code>
                <message>false</message>
                <threadName>false</threadName>
                <dataType>false</dataType>
                <encoding>false</encoding>
                <assertions>false</assertions>
                <subresults>false</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename">C:\zhaopeng\01-items\01-AutoTest\results\WrongResult_Function_os1.6__online.jmx</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="02-维基百科" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">15</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/wiki.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">wiki</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="维基百科" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${wiki}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_wiki.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849361161">:200209,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="03-天气查询" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">13</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/weather.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">weather</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="天气查询" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${weather}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_weather.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="850344016">:201401,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="04-时间日期查询" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/date.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">date</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="时间日期查询" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${date}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_date.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849509899">:200702,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="05-四则运算" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">6</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/calculate.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">calculate</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="四则运算" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${calculate}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_calculate.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="850373807">:201501,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="06-动物叫声" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">6</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/animalSounds.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">animalSounds</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="动物叫声" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${animalSounds}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_animalSounds.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849390704">:200301,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="07-乐器声音" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">7</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/musicInstrumentSounds.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">musicInstrumentSounds</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="乐器声音" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${musicInstrumentSounds}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_musicInstrumentSounds.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849390766">:200303,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="08-大自然声音" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">7</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/natureSounds.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">natureSounds</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="大自然声音" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${natureSounds}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_natureSounds.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849390735">:200302,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="09-笑话" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">4</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/joke.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">joke</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="笑话" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${joke}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_joke.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="850284527">:201204,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="10-脑筋急转弯" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">3</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/brainTwister.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">brainTwister</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="脑筋急转弯" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${brainTwister}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_brainTwister.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849361874">:200211,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="11-谁在叫" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/whovoice.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">whovoice</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="谁在叫" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${whovoice}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_whovoice.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1666964457">:404003,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="12-顺口溜" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">4</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/doggerel.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">doggerel</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="顺口溜" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${doggerel}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_doggerel.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849361905">:200212,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="13-绕口令" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">4</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/tongueTwister.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">tongueTwister</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="绕口令" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${tongueTwister}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_tongueTwister.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849361099">:200207,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="14-歌曲点播" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">32</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/song.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">song, song2</stringProp>
            <stringProp name="delimiter">\t</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="歌曲点播" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${song}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_song.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849331122">:200101,</stringProp>
              <stringProp name="-791293449">${song2}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="15-故事点播" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">11</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/story.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">story, story2, story3</stringProp>
            <stringProp name="delimiter">\t</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="故事点播" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${story}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_story.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849360913">:200201,</stringProp>
              <stringProp name="1384169865">${story2}</stringProp>
              <stringProp name="1384169896">${story3}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="17-中英互译" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">14</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/translate.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">translate, translate2</stringProp>
            <stringProp name="delimiter">\t</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="中英互译" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${translate}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_translate.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="850434350">:201711,</stringProp>
              <stringProp name="-820954334">${translate2}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="16-诗词背诵" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">17</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/poem.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">poem,poemcode</stringProp>
            <stringProp name="delimiter">\t</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="诗词背诵" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${poem}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_poem.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-696111438">${poemcode}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="18-英文对话" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">4</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/englishChat.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">englishChat</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="英语对话" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${englishChat}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_englishChat.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-38172528">:100102,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="19-打电话" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/phone.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">phone</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="打电话" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${phone}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_phone.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849539690">:200802,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="20-打开应用" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/apps.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">apps</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="打开应用" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${apps}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_apps.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="850403598">:201601,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="21-屏幕控制------------" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">3</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/setbrightness.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">setbrightness</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="屏幕控制" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${setbrightness}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_setbrightness.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1528076773">:900110,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="22-音量控制-------------" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/setvolume.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">setvolume</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="音量控制" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${setvolume}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_setvolume.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1528076773">:900110,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="23-休眠" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/exit.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">exit</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="休眠" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${exit}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_exit.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1528077703">:900101,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="24-闹钟" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/memo.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">memo</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="闹钟" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${memo}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_memo.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849510798">:200710,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="25-运动控制" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">4</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/action.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">action</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="运动控制" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${action}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_action.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1736834803">:300101,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="00-闲聊" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/chat.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">chat</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="闲聊" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${chat}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_chat.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-38202381">:100000,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="26-跳舞" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/dance.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">dance</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="跳舞" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${dance}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_dance.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849509868">:200701,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="27-电量查询---------------" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">3</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/setpower.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">setpower</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="电量查询" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${setpower}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_setpower.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1528076773">:900110,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="28-拍照" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">3</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/photograph.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">photograph</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拍照" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${photograph}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_photograph.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="849450286">:200501,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="29-电台点播" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">4</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/radio.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">radio</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="电台点播" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${radio}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_radio.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1813626660">lhttp.qingting.fm</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="30-教材点播" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">32</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="语料" enabled="true">
            <stringProp name="filename">/repo/var/jenkins/workspace/TBP_SmokeTest/TBP_SmokeTest_OS1.6/textbook.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">textbook,textbookcode</stringProp>
            <stringProp name="delimiter">\t</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="教材点播" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${request}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.turingos.cn</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/turingos/api/v2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="不加密请求" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">String timestamp = String.valueOf(System.currentTimeMillis());


String key = &quot;f95b927767df4ed2b776547410be2b2a&quot;;
String userid = &quot;160083738&quot;;
String type = &quot;0&quot;;
String cmd = &quot;${textbook}&quot;;

String data = &quot;{\&quot;content\&quot;: [{\&quot;data\&quot;: \&quot;&quot; + cmd + &quot;\&quot;,\&quot;type\&quot;:\&quot;&quot; + type + &quot;\&quot;}],\&quot;userInfo\&quot;: {\&quot;apiKey\&quot;: \&quot;&quot; + key + &quot;\&quot;,\&quot;uniqueId\&quot;: \&quot;&quot; + userid + &quot;\&quot;}}&quot;;

vars.put(&quot;request&quot;,&quot;{\&apos;data\&apos;:\&apos;&quot; + data + &quot;\&apos;,\&apos;key\&apos;:\&apos;&quot; + key + &quot;\&apos;,\&apos;timestamp\&apos;:\&apos;&quot; + timestamp + &quot;\&apos;}&quot;);
vars.put(&quot;cmd&quot;,cmd);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="结果处理" enabled="true">
              <stringProp name="BeanShellAssertion.query">import net.sf.json.*;
import java.io.*;


FileWriter fw=null;
BufferedWriter writer=null;
try{
File file2=new File(&quot;/repo/var/jenkins/workspace/TBP_SmokeTest/results/TestResult_textbook.txt&quot;);// 写

fw=new FileWriter(file2,true);
writer=new BufferedWriter(fw);

//写入内容
//根据code做if判断
String results=prev.getResponseDataAsString();
JSONObject responsejb=JSONObject.fromObject(results);
JSONObject intent = responsejb.getJSONObject(&quot;intent&quot;);
String code=intent.getString(&quot;code&quot;);

String yuliao=vars.get(&quot;cmd&quot;);

writer.write(yuliao+&quot;	&quot;+code+&quot;	&quot;+results);
writer.newLine();//换行
writer.flush();

}catch(Exception e){
e.printStackTrace();
}finally{
try{
writer.close();
fw.close();
}catch(IOException e){
e.printStackTrace();
}
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="977358051">${textbookcode}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
